create database epms;
use epms;

drop table if exists meeting;
create table meeting(
id int(11) primary key auto_increment,
content text,
question text,
partner varchar(100),
meetingTime date,
infoCreateTime datetime,
organize varchar(100),
type varchar(25),
userId int
);
select * from meeting;


create table if exists train(
id int(11) primary key auto_increment,
content text,
question text,
partner varchar(100),
trainTime date,
infoCreateTime datetime,
organize varchar(100),
type varchar(25),
userId int
);
select * from train;

drop table if exists execute;
create table execute(
id int(11) primary key auto_increment,
planid int(11),
leader varchar(100),
content text,
question text,
exeStartTime datetime,
exeEndTime datetime
);
select * from execute;
# alter table execute drop column finished;
alter table execute add column finished int(1) default 0;
alter table execute add column infoCreateTime datetime;
alter table execute add column exeRealEndTime datetime;
alter table execute add column overdue int(1) default 0;

drop table if exists plan;
create table plan(
id int(11) primary key auto_increment,
projectid int(11),
leader varchar(100),
name varchar(100),
content text,
planStartTime datetime,
planEndTime datetime
);
select * from plan;
# alter table plan drop column finished;
alter table plan add column finished int(1) default 0;
alter table plan add column infoCreateTime datetime;
alter table plan add column overdue int(1) default 0;

drop table if exists project;
create table project(
id int(11) primary key auto_increment,
leader varchar(100),
type varchar(100),
name varchar(100),
content text,
proStartTime datetime,
proEndTime datetime,
partner varchar(100)
);
select * from project;
# alter table project drop column finished;
alter table project add column finished int(1) default 0;
alter table project add column infoCreateTime datetime;
alter table project add column overdue int(1) default 0;

drop table if exists platform;
create table platform(
id int(11) primary key auto_increment,
name varchar(100),
content text,
leader varchar(100),
partner varchar(100),
platStartTime datetime,
platEndTime datetime,
platRealEndTime datetime,
infoCreateTime datetime,
finished int(1) default 0,
overdue int(1) default 0
);

drop table if exists person;
create table person(
id varchar(100) unique,
name varchar(100),
password varchar(50)
);
insert into person(id, name) values(14530, '李韬');
insert into person(id, name) values(18342, '龚宗宜');
insert into person(id, name) values(16074, '刘丹瑶');
insert into person(id, name) values(08387, '潘宇东');
insert into person(id, name) values(20083, '彭起');
insert into person(id, name) values(08377, '腾旭东');
insert into person(id, name) values(18587, '涂家琪');
insert into person(id, name) values(08396, '熊鹏飞');
insert into person(id, name) values(46054, '徐明卉');
insert into person(id, name) values(08203, '尤敏');
insert into person(id, name) values(11156, '张学红');
insert into person(id, name) values(14532, '张燎原');


drop table if exists oplog;
create table oplog(
id int(11) primary key auto_increment,
personid varchar(100),
ip varchar(50),
action text
);

#多表联删
# delete plan, execute from plan left join execute on execute.planid = plan.id where plan.id = #{id}
SET SQL_SAFE_UPDATES = 0;
delete plan, execute, project from plan left join execute on execute.planid = plan.id  right join project on project.id = plan.projectid where projectid = 1;


#普通查询
select * from plan where projectid = 5;
select id from project where name = 33;

#模糊查询
select * from project where name like '%123%' and leader like concat('%',"",'%');
select * from project where 1=1;
select * from project where proEndTime<='' and proStartTime>='';
delete from project where id=12;

#多表联查
select * from plan, project where 1=1 and plan.projectId = project.id and project.name like "%新增%" order by project.infoCreateTime desc;
select plan.* from plan, project where 1=1 and plan.projectId = project.id and project.name like "%玉昆%";
select * from execute, plan where 1=1       and execute.planId = plan.id and plan.name like "%额外%";


# 更新测试
select * from execute;
select date_format(exeRealEndTime, '%Y-%m') as time, count(id) as id from execute
where year(execute.exeRealEndTime) = '2022' group by month(exeRealEndTime);

select * from meeting;
select date_format(meetingTime, '%Y-%m') as time, count(id) as id from meeting
where year(meetingTime) = '2022' group by month(meetingTime);


describe execute;
update execute set exeRealEndTime = null , finished = 0 where id = 40;

SET SQL_SAFE_UPDATES = 0;
update project set finished = 0 where 1=1;
update plan set finished = 0 where 1=1;
update execute set overdue = 0;
select * from execute;
update execute set overdue = 0 where id = '39';

select * from project;
select * from plan where projectid=8;

delete from execute where id = 1000;
select * from train order by trainTime desc;
select * from meeting order by meetingTime desc;

select count(id) from project where year(proStartTime) = '2022';
select max(exeCount) as count, date_format(exeRealEndTime, '%Y-%m') from 
(select count(id) as exeCount, date_format(exeRealEndTime, '%Y-%m') as exeRealEndTime from execute where year(exeRealEndTime) = '2022') as a;

select id from person where id=123;
select * from person;
update person set id = 14530, password='123' where id = 14530;